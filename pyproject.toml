[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "purkinje-uv"
version = "0.4.0"
description = "Utilities to generate Purkinje networks from fractal trees and mesh surfaces"
authors = [{ name = "Ricardo García Ramírez", email = "rgr.5882@gmail.com" }]
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
dependencies = [
    "numpy",
    "scipy",
    "vtk",
    "pyvista",
    "meshio",
    "fim-python",
]

[project.optional-dependencies]
docs = [
    "sphinx>=8,<9",
    "furo",
    "sphinxcontrib-mermaid",
    "sphinxcontrib-bibtex>=2.6",
    "sphinx-multiversion>=0.2.4",
    "nbsphinx>=0.9.5",
    "nbconvert>=7.16",
    "nbformat>=5.10",
    "jupyter-client>=8.6",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.6.0",
    "nbsphinx-link>=1.3.1",
]

dev = [
  "pytest",
  "pytest-cov",
  "ruff",
  "mypy",
  "pre-commit",
  "meshio>=5.3",
]

e2e = [
  "meshio>=5.3",
  "pyvista>=0.43",
  "pyvistaqt>=0.11",
]

gpu = [
  "cupy-cuda12x; platform_system == 'Linux'"
]

all = [
  "sphinx>=8,<9",
  "furo",
  "sphinxcontrib-mermaid",
  "sphinxcontrib-bibtex>=2.6",
  "sphinx-multiversion>=0.2.4",
  "nbsphinx>=0.9.5",
  "nbconvert>=7.16",
  "nbformat>=5.10",
  "jupyter-client>=8.6",
  "sphinx-copybutton>=0.5.2",
  "sphinx-design>=0.6.0",
  "nbsphinx-link>=1.3.1",
  "pytest",
  "pytest-cov",
  "ruff",
  "mypy",
  "pre-commit",
  "meshio>=5.3",
  "pyvista>=0.43",
  "pyvistaqt>=0.11",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[project.urls]
"Homepage" = "https://github.com/ricardogr07/purkinje-uv/"
"Repository" = "https://github.com/ricardogr07/purkinje-uv/"

[tool.black]
line-length = 88
target-version = ["py310"]
skip-string-normalization = true

[tool.ruff]
target-version = "py310"

[tool.mypy]
files = ["src"]
python_version = "3.10"
strict = true
ignore_missing_imports = true
disallow_untyped_calls = false
check_untyped_defs = true
exclude = '^tests/'

[tool.pydocstyle]
convention = "google"
match-dir = "^src"
match      = ".*\\.py"
add-ignore = ["D105", "D107"]

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = "--cov=purkinje_uv --cov=utils --cov-report=term --cov-report=html --cov-fail-under=90 -ra -q"
testpaths  = ["tests"]
markers = [
  "e2e: end-to-end tests that exercise the full pipeline",
  "slow: slow tests (run only when explicitly requested)",
  "gpu: tests that require/assume a GPU (CuPy/CUDA); opt-in with -m gpu"
]

[tool.tox]
envlist                    = ["py310", "py312", "lint"]
isolated_build             = true
skip_missing_interpreters  = true

[tool.tox.testenv]
description = "Run the test suite"
deps = [
  "pytest>=7.1,<8.0",
]
commands = ["pytest -m 'not gpu' tests"]

[tool.tox.envs.lint]
description = "Run formatting, static analysis, and style checks"
skip_install  = true
deps          = ["black", "ruff", "mypy", "pydocstyle"]
commands      = [
  "black --check src/ tests/",
  "ruff check src/ tests/",
  "mypy src/",
  "pydocstyle src/",
  "pytest tests/"
]
